/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null || head.next==null){
            return head;
        }
        int count=0;
        ListNode temp=head;
        while(temp!=null){
            count++;
            temp=temp.next;
        }
        // last node connect kro head se
        temp=head;
        while(temp.next!=null){
            temp=temp.next;
        }
        temp.next=head;
        k=k%count;
        // update the count pointer
        count=count-k;
        temp=null;
        while(count>0){
            temp=head;
            head=head.next;
            count--;
        }
        temp.next=null;
        return head;

    }
}
